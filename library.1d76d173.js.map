{"mappings":"qhBACAA,EAAA,S,WCDA,IAAAC,EAAAD,EAAA,S,aAGAE,EAAAC,GAASC,OAAOC,KAAK,CACnBC,MAAO,QACPC,SAAU,aACVC,SAAU,OACVC,QAAS,EACTC,QAAS,MAIX,MAAMC,EAAiBC,SAASC,cAAc,kBACxCC,EAAiBF,SAASC,cAAc,wBACxCE,EAAeH,SAASC,cAAc,2BACtCG,EAAcJ,SAASC,cAAc,yBACrCI,EAAgBL,SAASC,cAAc,kBAS7C,SAASK,IACP,IACE,GAA6B,IAAzBjB,EAAAkB,cAAcC,OAEhB,YADAC,IAIFV,EAAeW,UAAY,GAC3BC,EAAgBtB,EAAAkB,c,CAChB,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,EAiB7C,SAASL,IACPnB,EAAAC,GAASC,OAAOuB,KAAK,oD,CAKvB,SAASJ,EAAgBK,GACvB,GAAuB,IAAnBA,EAAQR,OAEV,YADAH,EAAcY,UAAUC,OAAO,QAG/Bb,EAAcY,UAAUE,IAAI,QAE9B,MAAMC,EAASJ,EACZK,KAAIC,IACH,MACMC,EADO,IAAIC,KAAK,GAAGF,EAAMG,gBACbC,cAEZC,EAAcL,EAAMM,OAAOP,KAAIQ,GAASA,EAAMC,OACpD,IAAIC,EAAc,GA8BxB,IAA0BC,EAxBpB,OAJED,EADEJ,EAAYnB,OAAS,GA6BLwB,EA5BaL,EA6B9BK,EAAMC,MAAM,EAAG,IA7B4BC,KAAK,MAAQ,UAE3CP,EAAYO,KAAK,MAE1B,kEAEuBZ,EAAMa,kGAEcb,EAAMc,yCAAyCd,EAAMe,yJAK1Ef,EAAMe,kGAEDN,qDACFR,6DAI/B,IAEFW,KAAK,IAGR,OADAnC,EAAeuC,mBAAmB,YAAalB,GACxCA,C,CAhFTlB,EAAeqC,iBAAiB,QAASjC,GACzCH,EAAaoC,iBAAiB,QAASjC,GACvCF,EAAYmC,iBAAiB,SAmB7B,WACE,IACE,GAA4B,IAAxBlD,EAAAmD,aAAahC,OAEf,YADAC,IAGFV,EAAeW,UAAY,GAC3BC,EAAgBtB,EAAAmD,a,CAChB,MAAO5B,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,KA1B7CZ,EAAeqC,iBAAiB,QAASjC,GAEzCK,EAAgBtB,EAAAkB,e","sources":["src/lib.js","src/js/my-library-page-rendering.js"],"sourcesContent":["// import './js/pagination.js';\r\nimport './js/movie-modal.js';\r\nimport './js/local-storage.js';\r\nimport './js/my-library-page-rendering.js';\r\nimport './js/show-trailer.js';\r\nimport './js/team.js';\r\n\r\n","import { watchedMovies, queuedMovies } from './local-storage';\nimport Notiflix from 'notiflix';\n\nNotiflix.Notify.init({\n  width: '280px',\n  position: 'center-top',\n  distance: '10px',\n  opacity: 1,\n  timeout: 3000,\n  // ...\n});\n\nconst movieWrapperEl = document.querySelector('.lib-container');\nconst myLibraryBtnEl = document.querySelector('.menu__link__library');\nconst watchedBtnEl = document.querySelector('.library__link__watched');\nconst queredBtnEl = document.querySelector('.library__link__queue');\nconst noMoviesImgEl = document.querySelector('.no-movies-img');\n\nmyLibraryBtnEl.addEventListener('click', handleWatchedMoviesClick);\nwatchedBtnEl.addEventListener('click', handleWatchedMoviesClick);\nqueredBtnEl.addEventListener('click', handleQueuedMoviesClick);\n\nmyLibraryBtnEl.addEventListener('click', handleWatchedMoviesClick);\n\ncreateLibMarkUp(watchedMovies);\nfunction handleWatchedMoviesClick() {\n  try {\n    if (watchedMovies.length === 0) {\n      clearPage();\n      return;\n    }\n\n    movieWrapperEl.innerHTML = '';\n    createLibMarkUp(watchedMovies);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n}\n\nfunction handleQueuedMoviesClick() {\n  try {\n    if (queuedMovies.length === 0) {\n      clearPage();\n      return;\n    }\n    movieWrapperEl.innerHTML = '';\n    createLibMarkUp(queuedMovies);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n}\n\nfunction clearPage() {\n  Notiflix.Notify.info('Sorry, there is no any movie in your library yet.');\n\n  return;\n}\n\nfunction createLibMarkUp(results) {\n  if (results.length === 0) {\n    noMoviesImgEl.classList.remove('hide');\n    return;\n  } else {\n    noMoviesImgEl.classList.add('hide');\n  }\n  const markUp = results\n    .map(movie => {\n      const date = new Date(`${movie.release_date}`);\n      const year = date.getFullYear();\n\n      const genresArray = movie.genres.map(genre => genre.name);\n      let genresNames = '';\n      if (genresArray.length > 2) {\n        genresNames = arrayLengthCheck(genresArray).join(', ') + ', other';\n      } else {\n        genresNames = genresArray.join(', ');\n      }\n      return `\n      <div class=\"thumb\">\n    <ul class=\"carditem\" data-id='${movie.id}'>\n        <li class=\"cardimg-wrap\">\n            <img src=\"https://image.tmdb.org/t/p/w500/${movie.poster_path}\" alt=\"poster of the movie ${movie.original_title}\"\n                class=\"cardimg\"\n            />\n        </li>\n        <li class=\"cardtext-wrap\">\n            <h2 class=\"cardname\">${movie.original_title}</h2>\n            <div class=\"cardinfo\">\n                <p class=\"cardgenres\">${genresNames}</span></p>\n                <p class=\"cardyear\">${year}</p>\n            </div>\n        </li>\n    </ul>\n</div>`;\n    })\n    .join('');\n\n  movieWrapperEl.insertAdjacentHTML('beforeend', markUp);\n  return markUp;\n}\n\nfunction arrayLengthCheck(array) {\n  return array.slice(0, 2);\n}"],"names":["parcelRequire","$b5rV1","$parcel$interopDefault","$7Y9D8","Notify","init","width","position","distance","opacity","timeout","$10d071d420e07e0c$var$movieWrapperEl","document","querySelector","$10d071d420e07e0c$var$myLibraryBtnEl","$10d071d420e07e0c$var$watchedBtnEl","$10d071d420e07e0c$var$queredBtnEl","$10d071d420e07e0c$var$noMoviesImgEl","$10d071d420e07e0c$var$handleWatchedMoviesClick","watchedMovies","length","$10d071d420e07e0c$var$clearPage","innerHTML","$10d071d420e07e0c$var$createLibMarkUp","error","console","message","info","results","classList","remove","add","markUp","map","movie","year","Date","release_date","getFullYear","genresArray","genres","genre","name","genresNames","array","slice","join","id","poster_path","original_title","insertAdjacentHTML","addEventListener","queuedMovies"],"version":3,"file":"library.1d76d173.js.map"}